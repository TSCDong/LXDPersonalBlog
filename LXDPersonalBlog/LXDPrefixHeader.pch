//
//  LXDPrefixHeader.pch
//  LXDPersonalBlog
//
//  Created by 林欣达 on 16/1/12.
//  Copyright © 2016年 SindriLin. All rights reserved.
//

#ifndef LXDPrefixHeader_pch
#define LXDPrefixHeader_pch

#import <UIKit/UIKit.h>
#import "MBProgressHUD.h"
#import "UIView+LXDEasyFrame.h"


#pragma mark - 宏定义

#define LXD_EXPORT FOUNDATION_EXTERN

/// 强制内联
#define FORCE_INLINE __inline__ __attribute__((always_inline))
/// app主色
#define LXD_MAIN_COLOR [UIColor colorWithRed: 37/255. green: 148/255. blue: 211/255. alpha: 1]
/// 屏幕宽度
#define LXD_SCREEN_WIDTH CGRectGetWidth([UIScreen mainScreen].bounds)
/// 屏幕高度
#define LXD_SCREEN_HEIGHT CGRectGetHeight([UIScreen mainScreen].bounds)
/// 错误调试输出
#define LXD_ERROR_LOG(error) \
    NSLog(@"error happen <method: %s line: %d> error: %@", __FUNCTION__, __LINE__, error);
/// 空字符串
#define LXD_EMPTY_STRING @""

/// 屏幕尺寸比例调整
#define LXD_SCALE_4_0   (LXD_SCREEN_WIDTH / 320.)
#define LXD_SCALE_4_7   (LXD_SCREEN_WIDTH / 375.)
#define LXD_SCALE_5_5   (LXD_SCREEN_WIDTH / 424.)

/// HUD动画
#define MBHUDSHOW   \
    {   \
        [MBProgressHUD showHUDAddedTo: self.view animated: YES];    \
    }
#define MBHUDHIDE \
    {   \
        [MBProgressHUD hideAllHUDsForView: self.view animated: YES];  \
    }

/// CA动画关键key
#define LXD_ROTATE_KEY @"transform.rotation"



#pragma mark - 优化图片加载方式
/// 获取图片格式名
static inline NSString * kPNG() { return [NSString stringWithFormat: @".png"]; }
static inline NSString * KJPEG() { return [NSString stringWithFormat: @".jpeg"]; }
static inline NSString * kJPG() { return [NSString stringWithFormat: @".jpg"]; }

/// 获取图片比例命名后缀
static inline NSString * kImageScaleSuffix() {
    NSInteger scale = floor([UIScreen mainScreen].scale);
    if (scale == 2) { return [NSString stringWithFormat: @"@2x"]; }
    else if (scale == 3) { return [NSString stringWithFormat: @"@3x"]; }
    else { return LXD_EMPTY_STRING; }
}

/// 获取图片格式，默认为png格式
static FORCE_INLINE NSString * kCertainImageFormat(NSMutableString * imageName) {
    NSString * imageFormat;
    if ([imageName hasSuffix: kPNG()]) { imageFormat = kPNG(); }
    else if ([imageName hasSuffix: KJPEG()]) { imageFormat = KJPEG(); }
    else if ([imageName hasSuffix: kJPG()]) { imageFormat = kJPG(); }
    if (imageFormat) {
        [imageName deleteCharactersInRange: NSMakeRange(imageName.length - imageFormat.length, imageFormat.length)]; }
    imageFormat = imageFormat ?: kPNG();
    return imageFormat;
}

/// 清空图片后缀名倍数，如果存在后缀
static FORCE_INLINE void kCleanScaleSuffix(NSMutableString * imageName) {
    if ([imageName hasSuffix: [NSString stringWithFormat: @"@2x"]] || [imageName hasSuffix: [NSString stringWithFormat: @"@3x"]]) {
        [imageName deleteCharactersInRange: NSMakeRange(imageName.length - 3, 3)];
    }
}

/// 获取图片正确命名
static FORCE_INLINE NSString * kAbsoluteImageName(NSMutableString * imageName) {
    NSString * imageFormat = kCertainImageFormat(imageName);
    kCleanScaleSuffix(imageName);
    [imageName appendString: kImageScaleSuffix()];
    [imageName appendString: imageFormat];
    return imageName;
}

/// 加载图片（无缓存）
static FORCE_INLINE UIImage * kImageNamed(NSString * imageName) {
    NSString * absoluteImageName = kAbsoluteImageName(imageName.mutableCopy);
    return [UIImage imageNamed: absoluteImageName];
}



#pragma mark - 通用数据
/// 使用rgb值创建颜色
static FORCE_INLINE UIColor * kRGB(CGFloat red, CGFloat green, CGFloat blue) {
    return [UIColor colorWithRed: red/255. green: green/255. blue: blue/255. alpha: 1];
}

/// 存储解析后数据列表的关键字
LXD_EXPORT NSString * const LXDArticleListKey;

/// 通用的回调block
typedef void(^LXDCommonHandler)(id object, NSInteger status, NSDictionary * userInfo);

/// 通用的状态码
typedef enum
{
    LXDStatusFailed = -1,
    LXDStatusCancel = 0,
    LXDStatusSuccess = 1,
} LXDCommonStatus;

/// 博客地址
static NSString const * const LXDBlogAddress = @"http://sindrilin.com";

#endif
